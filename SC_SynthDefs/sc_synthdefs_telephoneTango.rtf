{\rtf1\ansi\ansicpg1252\cocoartf1138
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red0\green115\blue0;\red96\green96\blue96;}
\deftab720
\pard\pardeftab720

\f0\fs24 \cf2 //Courtney Brown --> my standard synth shit for TelephoneTango\
\
//not used yet.  will be used as well, fyi\cf3 \
(\
\cf4 SynthDef\cf3 (\cf5 \\audio_reson_out\cf3 , \{ \cf4 |inBus = 1, bufnum = 0, outbus = 0, amp = 0.5, loop = 0,\
                        pan = 0, rate = 1.0, pitch_index = 1, bandwidth_ratio = 0.01|\cf3 \
                        \
        \cf4 var\cf3  xout, in_amp, d_pitches, d_pitch_indices, octave;\
        in_amp = \cf4 In\cf3 .ar(inBus);\
        octave = 1;\
        \
\pard\pardeftab560
\cf2 //	d_pitch_indices = [10, 2, 7, 9, 2, 8, 2, 9, 7, 7, 2, 8, 8];        \cf3 \
\cf2 //	d_pitches = Array.fill(d_pitch_indices[0], \{(62+(12*octave)).midicps\});\cf3 \
\cf2 //	1.for(d_pitch_indices.size-1, \{ |i|d_pitches = 	d_pitches.addAll(Array.fill(d_pitch_indices[i], \{(62+i\cf3 \
\cf2 //	+(12*octave)).midicps\}))\}) ;\cf3 \
\pard\pardeftab720
\cf3         \
    xout = 0;\
    6.for(1, \{ \cf4 |i|\cf3 \
\pard\pardeftab560
\cf3 		xout = xout + \cf4 Resonz\cf3 .ar(in_amp, \cf4 Select\cf3 .kr(pitch_index, d_pitches)*i, bandwidth_ratio, 1/(i+1)); \
\pard\pardeftab720
\cf3 	\}); \
                \
    \cf4 Out\cf3 .ar(outbus, xout);\
    \
\}).store;\
)\
\
\
\cf2 //currently used.\cf3 \
(\
\cf4 SynthDef\cf3 (\cf5 \\playPotsAndPans\cf3 , \{ \cf4 | whichPot = 0, outbus = 1, amp = 1, loop = 0,\
                        pan = 0, rate = 1.0, pitch_index = 1, bandwidth_ratio = 0.5, trig=0 |\cf3 \
        \
        \cf4 var\cf3  data, sndFile, pots, path, index, playing;\
        index = 0;\
        pots = [\cf6 "sounds/grater2.wav"\cf3 , \cf6 "sounds/potlid2.wav"\cf3 , \cf6 "sounds/bigpot2.wav"\cf3 , \cf6 "sounds/pan3.wav"\cf3 ];\
        \
        \cf2 //add pitch? how much?\cf3 \
        \cf2 //add pitch in the preceding synth def    \cf3 \
      \
        \
          sndFile = \cf4 Array\cf3 .fill(pots.size, \{ \cf4 |i|\cf3  \cf4 var\cf3  buf; buf = \cf4 Buffer\cf3 .read(s, pots[i]);  buf.bufnum; \} );\
          \
         data = \cf4 PlayBuf\cf3 .ar(1, \cf4 Select\cf3 .kr(whichPot, sndFile));\
          \cf4 FreeSelfWhenDone\cf3 .kr(data);\
          \cf4 Out\cf3 .ar(outbus, \cf4 Pan2\cf3 .ar(data, pan, amp));\
          \cf4 Out\cf3 .ar(0, \cf4 Pan2\cf3 .ar(data, pan, amp)); \
\
\}).load(s);\
)}